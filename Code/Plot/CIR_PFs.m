numSol = 100;
numSet = 100;
numRun = 32;
ref    = 1;
k      = 1;
numResult = 4;
pro = {'linear_triangular','concave_triangular','convex_triangular', ...
    'linear_invertedtriangular','concave_invertedtriangular','convex_invertedtriangular'};
proDis = {'Linear','Concave','Convex', ...
    'I-Linear','I-Concave','I-Convex'};
obj = [3,5,8,10];
numVecList = [5,10,20,50,100,200];
kList = [1,5,10,20,60,90];
numVec = 100;
method = 'UNV';
proInd = 6;
for objInd = 1:2
    M = obj(objInd);
    CIR = zeros(2,length(pro));
    for proInd = 1:length(pro)
        fileName = sprintf(['./Result/evaluate_result_dim_', ...
            '%d_numVec_%d_probtype_%s_numSol_10_p=%d_h=0_%d_%s_k%d.mat'], ...
            M,numVec,pro{proInd},numVec,ref,method,k);
        struct = load(fileName);
        data = struct.evaluate_result;
        CIR(1,proInd) = mean(data(1,2,:));
        fileName = sprintf(['./Result/evaluate_result_dim_', ...
            '%d_numVec_%d_probtype_%s_numSol_100_p=%d_h=0_%d_%s_k%d.mat'], ...
            M,numVec,pro{proInd},numVec,ref,method,k);
        struct = load(fileName);
        data = struct.evaluate_result;
        CIR(2,proInd) = mean(data(1,2,:));
    end
    foldName = './Figure/Figure6';
    fileName = ['M=',num2str(M)];
    fileName = sprintf('./%s/%s',foldName,fileName);        
    Fig = figure(...
        'Units',           'pixels',...
        'Name',            fileName,...
        'NumberTitle',     'off',...
        'IntegerHandle',   'off', ...
        'Position',       [100,100,600,550]);
    AxesH = axes(...
        'Parent',          Fig,...
        'XLim',            [1,6],...
        'XGrid',           'on',...
        'YGrid',           'on',...
        'Visible',         'on',...
        'FontSize',        24,...
        'XTickLabel',      proDis,...
        'YTick',           0.2:0.2:1,...
        'YTickLabel',      {'0.2','0.4','0.6','0.8','1.0'},...
        'XTick',           1:6);
    AxesH.YLabel.String = 'CIR';
    xtickangle(25)
    hold on;
    x = 1:6;
    lw = 4; ms = 12;
    color = {'b','r','c','r','g','b','k'};
    for lineInd = 1:size(CIR,1)
        colorInd = mod(lineInd-1,length(color))+1;
        plot(x,CIR(lineInd,:),['-',color{colorInd},'s'],'MarkerSize',ms,...
            'MarkerEdgeColor',color{colorInd},'MarkerFaceColor',color{colorInd});
    end
    l = legend({'Number of Solutions: 10','Number of Solutions: 100'});
    l.Location = 'northeast';
    l.Box = 'off';
    set(gcf, 'renderer', 'painters');
    saveas(Fig,[Fig.Name],'png');
    close all;
end