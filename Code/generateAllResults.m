function generateAllResults(dimension,WVMethod,problem_type,set_number, ...
    solution_number,num_vector,reference_point,postNumSol,preNumVec)
    % File name data_set_d_solutionNumber_problemType_setNum_numVector
    data_set_file_name = ['./Data/data_set_',num2str(dimension),'_', ...
        num2str(solution_number),'_',problem_type,'_', ...
        num2str(set_number),'_',num2str(reference_point),'.mat'];
    data_set = load(data_set_file_name, 'data_set');
    data_set = data_set.data_set;
    HVC_file_name = strcat('./Result/HVC_',num2str(dimension),'_', ...
        num2str(solution_number),'_',problem_type,'_', ...
        num2str(set_number),'_',num2str(reference_point),'.mat');
    if exist(HVC_file_name, 'file') == 2
        HVC = load(HVC_file_name);
        HVC = HVC.HVC;
    end
    disp(strcat('D',num2str(dimension),'_',WVMethod,'_',problem_type, ...
        '_ref=',num2str(reference_point),'_numVec=',num2str(num_vector), ...
        '_p=',num2str(preNumVec),'_h=',num2str(postNumSol)));
    seed_number = 32;
    parfor seed = 1:seed_number
        % File name result_set_d_solutionNumber_problemType_setNum_numVector
        result_set_file_name = ['./Raw_Result/result_set_',num2str(dimension), ...
            '_',problem_type,'_numVec_',num2str(num_vector), ...
            '_seed_',num2str(seed),'_numSol_',num2str(solution_number), ...
            '_p=',num2str(preNumVec),'_h=',num2str(postNumSol), ...
            '_',num2str(reference_point),'_',WVMethod,'.mat'];
        result_set = calculateResult(data_set,num_vector,dimension,seed, ...
            WVMethod,postNumSol,preNumVec);
        result_set = [HVC; result_set];
        parsave(result_set_file_name,result_set);
    end
end
